{"title":"問題解決プロフェッショナル 「思考と技術」","markdown":{"yaml":{"title":"問題解決プロフェッショナル 「思考と技術」"},"headingText":"序文","containsRefs":false,"markdown":"\n\n[リンク](https://www.diamond.co.jp/book/9784478005538.html)\n\n\n- 問題解決のための3つの行動規範\n    - ポジメン: ポジティブ・メンタリティ\n        - 決してあきらめず前向きに物事を捉える\n    - ロジシン: ロジカルシンキング\n        - 論理的に考える\n    - パラテン: パラダイム転換\n        - 従来の枠組みからの転換を目指す\n- 問題解決のプロセス\n    - 2つの思考\n        - ゼロベース思考\n        - 仮説思考\n    - 2つの技術\n        - MECE\n        - ロジックツリー\n    - 1つのプロセス\n        - ソリューション・システム\n\n## 第1章 思考編\n\n- ゼロベース思考\n    - ゼロベースで物事を考える=「既成の枠」を取り外す\n- 仮説思考\n    - 常にその時点での結論を持ってアクションを起こす\n- ビジネスを成功に導く = 「結果がうまくいく」ための思考がゼロベース思考と仮説思考\n\n#### <ゼロベース思考><仮説思考>を実践する\n\n### 1 <ゼロベース思考> --- 「既成の枠」を取り外す ---\n\n- <ゼロベース思考>の2つのポイント\n    - 自分の狭い枠の中で否定に走らない\n    - 顧客にとっての価値を考える\n\n#### 1 自分の狭い枠の中で否定に走らない\n\n- <ゼロベース思考>の妨げになるのは「既成の枠」  \n    -「この課題を解決するための具体策はある」という前提でゼロベースから考える\n\n- 既存の枠で考える従来どおりの思考(Bad)\n    - 枠の外にある解決策を見落とす\n    - 枠の中の否定的要素を列挙してしまう\n- ゼロベース思考(Good)\n    - 自分の狭い枠を超えて考える\n    - 解決策を見出す可能性が高まる\n\n#### 2 顧客にとっての価値を考える\n\n- 自分の立場だけで問題をとらえるのではなく、「顧客にとっての価値」を考え、実行に移すことが大事\n    - 自分の立場だけで問題をとらえると「既成の枠」から抜け出せない\n    - 多くの創業者がビジネスを立ち上げることに成功した理由は、自身が開発者であるとどう似にユーザーでもあったから\n        - このため、「顧客にとっての価値」を考え、貫くことができた\n    - 大企業になると「顧客にとっての価値」を考え、貫くことができない\n        - 規模の拡大により消費者との距離が遠くなるため\n\n### 2 <仮説思考> --- 常にその時点での結論を持ってアクションを起こす ---\n\n- <仮説思考>の3つのポイント\n    - アクションに結び付く議論を常に持つ --- 結論の仮説\n    - 結論に導く背後の理由やメカニズムを考える --- 理由の仮説\n    - 「ベスト」を考えるよりも「ベター」を実行する --- スピードを重視\n\n#### 1 アクションに結び付く議論を常に持つ\n\n- なにがなんでも結論を出すことが仮説思考の始まり。ビジネスでは1つの具体的結論が100の評論に勝る\n    - まず結論を出す\n    - 出した結論に対して SO WHAT? (だから何なの) を繰り返す\n    - アクションに結び付く結論を出す\n- 最初は的を外していても、常にアクションに結び付く結論を持つをいうことを心がけると精度は上がる。\n\n#### 2 結論に導く背後の理由やメカニズムを考える\n\n- 背後のメカニズムを把握するメリット\n    - 軌道修正が容易\n    - 要と思われるものの裏をとれる\n\n- その時点での結論を出すこと自体が、後にさらに考えを深め、より良い解決策をだすことに結び付く\n    - もし根拠が希薄で不安のある数字があれば、そこだけを検証すれば格段に精度が上がるはず\n    - メカニズムに関する仮説が納得のいくものであるが、実際の数字より多い額が出てしまったとき\n        - 仮説が間違っているかもしれない\n        - 市場が発展途上の場合は、ポテンシャル市場の額を表しており、企業が十分に市場をカバーしていないとも考えられる\n\n#### 3 「ベスト」を考えるよりも「ベター」を実行する\n\n- 実行することにより、今よりもベターな状況が想定されれば、とにかく実行に移す\n    - ビジネスでは絶対的な正解はない\n    - ベターな解決策を見つけたらすぐに実行する\n    - どんどん軌道修正していく\n\n- ベターな解決策で現場を動かすほうが効率的\n    - ベターな解決策でも現場を動かし始めると精度の高いすぐ役立つ情報が自動的に入ってくる\n    - ベターな解決策が見えたらすぐに実行に移し、試行錯誤を重ねる\n    - ベストは最後に見えてくる\n\n##### 情報収集に時間を使いすぎない\n\n- ビジネスの現場では、時間と環境の変化にしたがって解決策が変化していく\n- 6割レベルの情報が集まったら一度方向性の判断を行う\n- **初めにアクションに結び付く結論を言い、その結論に導く理由を説明する**\n\n## 第2章 技術編\n\n- 第1章の2つの思考は問題解決のための基本態度\n- 第2章の2つの技術は問題解決のための基本スキル\n\n#### ＜MECE＞ ＜ロジックツリー＞ を応用する\n\n##### 市場/競合/自社のとらえ方に大きなモレはないか\n\n- 戦略を考えるうえで3つの動きを「モレ」なくカバーすることの大切さ\n- 戦略を実行するうえで「広がり」を押さえ「具体化」することの重要さ\n\n### 1 ＜MECE＞ --- モレはないかダブりはないかをチェックする ---\n\n- Mutually Exclusive Collectively Exhaustive\n\n#### 1 ＜MECE＞をビジネスで使いこなす\n\n- ＜MECE＞が重要な理由は、経営資源に制限がある限り、大きなモレやダブりは\nビジネスの効果・効率を著しく阻害するため。\n\n- ＜MECE＞を活用する上での3つのポイント\n    - **モレ**によって的を外していないか？\n    - **ダブり**によって効率を阻害していないか？\n    - **＜MECE＞**でとらえ、最後に**優先順位**をつけているか？\n\n##### モレによって的を外していないか？\n\n- できるだけモレを出さないように、<ゼロベース思考>で物事を大きくとらえることから始めるべき。\n\n##### ダブりによって効率を阻害していないか\n\n- ダブりが生じていると、資源配分上効率が悪くなるだけでなく、受け手に対して混乱を与える場合がある。\n\n##### ＜MECE＞でとらえ、最後に優先順位をつけているか？\n\n- ＜MECE＞でとらえられるようになったら、 必ず優先順位をつける。\n    - どんなに＜MECE＞になっていても、すべてをカバーした網羅的な解決策は、 何も言っていないのと同じことである。\n\n- 特に＜MECE＞の重要性が増すのは、戦略を立案するとき。\n    - 貴重な経営資源の配分に当たっては、できるだけモレやダブりを最小限に抑えながら優先順位をつけることが、企業の意思決定者にとって肝要となる。\n\n- ＜MECE＞は網羅性を追及するための分解ツールとしては強力だが、その先の経営資源配分の優先順位付けに失敗すれば意味がない。\n\n#### 2 フレームワークで＜MECE＞を学ぶ\n\n- 世の中のフレームワークの多くは＜MECE＞の応用である。\n\n##### 3C + 1C\n\n- 顧客（Customer）、競合（Comperitor）、自社（Company）およびチャネル（Channel）\n- 戦略は単純明快なほどいい。なぜなら、あまり複雑だと実行が困難になるから。\n\n##### ビジネス・システム\n\n- 製品・サービスが開発されてから市場に出るまでの付加価値の流れを時間軸で＜MECE＞に整理したフレームワークをビジネス・システムとかバリュー・デリバリー・システムとか呼ぶ。\n\n- <ゼロベース思考>で「顧客にとっての最大の価値を提供する」視点で自社のビジネスの流れを見直すと、現状とのギャップが明確になる。\n\n\n##### マーケティングの4P\n\n- Product, Price, Place, Promotion\n\n##### 事業ポートフォリオ\n\n- X軸に相対マーケットシェア、Y軸に市場成長率をとって各事業をプロット\n- 資源配分を考えるときに使う\n\n### 2 <ロジックツリー> --- 限られた時間の中で広がりと深さを押さえる ---\n\n- ロジックツリーは以下の3つの点で優れている\n    - モレやダブりを未然にチェックできる\n    - 原因・解決策を具体的に落とし込める\n    - 各内容の因果関係を明らかにできる\n\n#### 1 <ロジックツリー>で原因を追及する\n\n- 問題を解決するときは、根っこの具体的原因を突き止めることが重要\n- ロジックツリーを使って、根っこの具体的原因を突き止めるには、とにかくWHY?を自問自答し続けることが必要。\n- WHY?を続けて問題を深堀すれば、問題のの裏返しの解も通用するものになるかもしれない。\n- 真相が解明されてきたら、解決策具体化のためのロジックツリーによりいろいろな解決策のオプションを考える。\n\n#### 2 <ロジックツリー>で解決策を具体化する\n\n#### 3 <ロジックツリー>を作る\n\n#### 4 フレームワークで<ロジックツリー>を学ぶ\n\n## 第3章 プロセス編\n\n- ソリューション・システムは、自然な問題解決のプロセスを体系化したもの\n\n#### ソリューション・システムのプロセスを再現する\n\n- ベターソリューションを実行するためのステップ\n    - 解決すべき課題を適切に設定する\n    - 様々な解決オプションを考える\n    - 解決策を検証・評価する\n\n### 1 課題を設定する\n\n- 「課題の設定」のプロセス\n    - 「主要課題」の設定\n    - 「個別課題」の設定\n\n#### 1 主要課題の設定 --- 何かと比較する\n\n## 第4章 実践編"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"css":["../../_styles/style.css"],"output-file":"index.html"},"language":{},"metadata":{"lang":"ja","fig-responsive":true,"quarto-version":"1.2.335","theme":"flatly","bibliography":["../../references.bib"],"code-block-bg":true,"title":"問題解決プロフェッショナル 「思考と技術」"},"extensions":{"book":{"multiFile":true}}}}}
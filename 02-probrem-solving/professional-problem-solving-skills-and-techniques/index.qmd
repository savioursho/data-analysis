---
title: 問題解決プロフェッショナル 「思考と技術」
---

[リンク](https://www.diamond.co.jp/book/9784478005538.html)

## 序文



- 問題解決のための3つの行動規範
    - ポジメン: ポジティブ・メンタリティ
        - 決してあきらめず前向きに物事を捉える
    - ロジシン: ロジカルシンキング
        - 論理的に考える
    - パラテン: パラダイム転換
        - 従来の枠組みからの転換を目指す
- 問題解決のプロセス
    - 2つの思考
        - ゼロベース思考
        - 仮説思考
    - 2つの技術
        - MECE
        - ロジックツリー
    - 1つのプロセス
        - ソリューション・システム

## 第1章 思考編

- ゼロベース思考
    - ゼロベースで物事を考える=「既成の枠」を取り外す
- 仮説思考
    - 常にその時点での結論を持ってアクションを起こす
- ビジネスを成功に導く = 「結果がうまくいく」ための思考がゼロベース思考と仮説思考

#### <ゼロベース思考><仮説思考>を実践する

### 1 <ゼロベース思考> --- 「既成の枠」を取り外す ---

- <ゼロベース思考>の2つのポイント
    - 自分の狭い枠の中で否定に走らない
    - 顧客にとっての価値を考える

#### 1 自分の狭い枠の中で否定に走らない

- <ゼロベース思考>の妨げになるのは「既成の枠」  
    -「この課題を解決するための具体策はある」という前提でゼロベースから考える

- 既存の枠で考える従来どおりの思考:-1:
    - 枠の外にある解決策を見落とす
    - 枠の中の否定的要素を列挙してしまう
- ゼロベース思考:+1:
    - 自分の狭い枠を超えて考える
    - 解決策を見出す可能性が高まる

#### 2 顧客にとっての価値を考える

- 自分の立場だけで問題をとらえるのではなく、「顧客にとっての価値」を考え、実行に移すことが大事
    - 自分の立場だけで問題をとらえると「既成の枠」から抜け出せない
    - 多くの創業者がビジネスを立ち上げることに成功した理由は、自身が開発者であるとどう似にユーザーでもあったから
        - このため、「顧客にとっての価値」を考え、貫くことができた👍
    - 大企業になると「顧客にとっての価値」を考え、貫くことができない👎
        - 規模の拡大により消費者との距離が遠くなるため

### 2 <仮説思考> --- 常にその時点での結論を持ってアクションを起こす ---

- <仮説思考>の3つのポイント
    - アクションに結び付く議論を常に持つ --- 結論の仮説
    - 結論に導く背後の理由やメカニズムを考える --- 理由の仮説
    - 「ベスト」を考えるよりも「ベター」を実行する --- スピードを重視

#### 1 アクションに結び付く議論を常に持つ

- なにがなんでも結論を出すことが仮説思考の始まり。ビジネスでは1つの具体的結論が100の評論に勝る
    - まず結論を出す
    - 出した結論に対して SO WHAT? (だから何なの) を繰り返す
    - アクションに結び付く結論を出す
- 最初は的を外していても、常にアクションに結び付く結論を持つをいうことを心がけると精度は上がる。

#### 2 結論に導く背後の理由やメカニズムを考える

- 背後のメカニズムを把握するメリット
    - 軌道修正が容易
    - 要と思われるものの裏をとれる

- その時点での結論を出すこと自体が、後にさらに考えを深め、より良い解決策をだすことに結び付く
    - もし根拠が希薄で不安のある数字があれば、そこだけを検証すれば格段に精度が上がるはず
    - メカニズムに関する仮説が納得のいくものであるが、実際の数字より多い額が出てしまったとき
        - 仮説が間違っているかもしれない
        - 市場が発展途上の場合は、ポテンシャル市場の額を表しており、企業が十分に市場をカバーしていないとも考えられる

#### 3 「ベスト」を考えるよりも「ベター」を実行する

- 実行することにより、今よりもベターな状況が想定されれば、とにかく実行に移す
    - ビジネスでは絶対的な正解はない
    - ベターな解決策を見つけたらすぐに実行する
    - どんどん軌道修正していく

- ベターな解決策で現場を動かすほうが効率的
    - ベターな解決策でも現場を動かし始めると精度の高いすぐ役立つ情報が自動的に入ってくる
    - ベターな解決策が見えたらすぐに実行に移し、試行錯誤を重ねる
    - ベストは最後に見えてくる

##### 情報収集に時間を使いすぎない

- ビジネスの現場では、時間と環境の変化にしたがって解決策が変化していく
- 6割レベルの情報が集まったら一度方向性の判断を行う
- **初めにアクションに結び付く結論を言い、その結論に導く理由を説明する**

## 第2章 技術編

- 第1章の2つの思考は問題解決のための基本態度
- 第2章の2つの技術は問題解決のための基本スキル

#### ＜MECE＞ ＜ロジックツリー＞ を応用する

##### 市場/競合/自社のとらえ方に大きなモレはないか

- 戦略を考えるうえで3つの動きを「モレ」なくカバーすることの大切さ
- 戦略を実行するうえで「広がり」を押さえ「具体化」することの重要さ

### 1 ＜MECE＞ --- モレはないかダブりはないかをチェックする ---

- Mutually Exclusive Collectively Exhaustive

#### 1 ＜MECE＞をビジネスで使いこなす

- ＜MECE＞が重要な理由は、経営資源に制限がある限り、大きなモレやダブりは
ビジネスの効果・効率を著しく阻害するため。

- ＜MECE＞を活用する上での3つのポイント
    - **モレ**によって的を外していないか？
    - **ダブり**によって効率を阻害していないか？
    - **＜MECE＞**でとらえ、最後に**優先順位**をつけているか？

##### モレによって的を外していないか？

- できるだけモレを出さないように、<ゼロベース思考>で物事を大きくとらえることから始めるべき。

##### ダブりによって効率を阻害していないか

- ダブりが生じていると、資源配分上効率が悪くなるだけでなく、受け手に対して混乱を与える場合がある。

##### ＜MECE＞でとらえ、最後に優先順位をつけているか？

- ＜MECE＞でとらえられるようになったら、 必ず優先順位をつける。
    - どんなに＜MECE＞になっていても、すべてをカバーした網羅的な解決策は、 何も言っていないのと同じことである。

- 特に＜MECE＞の重要性が増すのは、戦略を立案するとき。
    - 貴重な経営資源の配分に当たっては、できるだけモレやダブりを最小限に抑えながら優先順位をつけることが、企業の意思決定者にとって肝要となる。

- ＜MECE＞は網羅性を追及するための分解ツールとしては強力だが、その先の経営資源配分の優先順位付けに失敗すれば意味がない。

#### 2 フレームワークで＜MECE＞を学ぶ

- 世の中のフレームワークの多くは＜MECE＞の応用である。

##### 3C + 1C

- 顧客（Customer）、競合（Comperitor）、自社（Company）およびチャネル（Channel）
- 戦略は単純明快なほどいい。なぜなら、あまり複雑だと実行が困難になるから。

##### ビジネス・システム

- 製品・サービスが開発されてから市場に出るまでの付加価値の流れを時間軸で＜MECE＞に整理したフレームワークをビジネス・システムとかバリュー・デリバリー・システムとか呼ぶ。

- <ゼロベース思考>で「顧客にとっての最大の価値を提供する」視点で自社のビジネスの流れを見直すと、現状とのギャップが明確になる。


##### マーケティングの4P

- Product, Price, Place, Promotion

##### 事業ポートフォリオ

- X軸に相対マーケットシェア、Y軸に市場成長率をとって各事業をプロット
- 資源配分を考えるときに使う

### 2 <ロジックツリー> --- 限られた時間の中で広がりと深さを押さえる ---

- ロジックツリーは以下の3つの点で優れている
    - モレやダブりを未然にチェックできる
    - 原因・解決策を具体的に落とし込める
    - 各内容の因果関係を明らかにできる

#### 1 <ロジックツリー>で原因を追及する

- 問題を解決するときは、根っこの具体的原因を突き止めることが重要
- ロジックツリーを使って、根っこの具体的原因を突き止めるには、とにかくWHY?を自問自答し続けることが必要。
- WHY?を続けて問題を深堀すれば、問題のの裏返しの解も通用するものになるかもしれない。
- 真相が解明されてきたら、解決策具体化のためのロジックツリーによりいろいろな解決策のオプションを考える。

#### 2 <ロジックツリー>で解決策を具体化する

#### 3 <ロジックツリー>を作る

#### 4 フレームワークで<ロジックツリー>を学ぶ

## 第3章 プロセス編

- ソリューション・システムは、自然な問題解決のプロセスを体系化したもの

#### ソリューション・システムのプロセスを再現する

- ベターソリューションを実行するためのステップ
    - 解決すべき課題を適切に設定する
    - 様々な解決オプションを考える
    - 解決策を検証・評価する

### 1 課題を設定する

- 「課題の設定」のプロセス
    - 「主要課題」の設定
    - 「個別課題」の設定

#### 1 主要課題の設定 --- 何かと比較する

- 現象を解決すべき問題として認識することが「課題設定」である
- 問題として認識するために、起こっている現象を何かと比較する
    - 時系列の例: A商品の利益額が年々下がっている
    - 標準化の例: A商品の営業員1人当たりの利益額が業界平均を下回ってきた
    - ベンチマーク化の例: 当社の利益額とマーケット・リーダーの利益額との差が広がっている

#### 2 個別課題の設定 --- 背後のメカニズムを考察する

- 2つの重要なポイント
    - できるだけ＜MCEC＞や<ロジックツリー>を駆使して独自のフレームワークを作りあげる
    - 「主要課題」から「個別課題」へのブレークダウンの目的は、問題の背景やメカニズムを明らかにすることである

### 2 解決策の仮説を立てる

- 解決策の仮説とは、「主要課題」に対するその時点でのアクションに結び付く具体的解決策のこと
- 解決策の仮説の2つの要素
    - 「個別課題」に対する「個別解決策」づくり
    - 「主要課題」に対する「総合解決策」づくり

#### 1 個別解決策はコントロール可能なものになっているか

- それぞれの「個別課題」に対する「個別解決策」づくりを<ゼロベース思考><仮説思考>をもとに考え抜く
- 自分でコントロール可能かどうかについてYES/NOの結論=仮説を出す
    - YESの場合: その具体的解決策(HOW)を明らかにする
    - NOの場合 : できない理由(WHY)を明らかにする
- 少しでも可能性があればYESにする
- 解決策が出ない原因: 
    - 「個別課題」の分析が曖昧
    - 課題と解決策の間のロジックの詰めが甘い
        - その時の対処法: 解決策具体化の<ロジックツリー>(SO WHAT?)を活用する

#### 2 総合解決策は全体の資源配分を考えているか

- 「個別課題」を組み合わせて、「主要課題」に対する「総合解決策」作る
- 「総合解決策」は「個別解決策」を組み合わせ、経営資源の観点からそれらの整合性をチェックしたうえで作る
- 何通りからの「総合解決策」の中からひとつ選択し、それに集中する

### 3 解決策を検証・評価する

- 「個別解決策」の「YES」が成立するか分析・証明
- 「総合解決策」を経営資源や企業の方針の観点から評価

#### 1 個別解決策の検証 --- ファクトベースでチェックする

- ファクトベースであることが重要
- 検証の分析段階では、スペードと効率性を重視すべき

#### 2 総合解決策の評価 --- ハードとソフトの両面から判断する

- 解決策そのもののハードな面と、実行する側のソフトな面の両方から評価する
- ハードな面は1️⃣期待成果、2️⃣投入資源、3️⃣リスク、4️⃣展開スピードから評価する
- ソフトな面は1️⃣企業スタイルとの整合性、2️⃣トップのコミットメント、3️⃣実務レベルの推進者の有無で評価する

### 4 <ソリューションシステム>シートを使う

- まず書き出す。最終的には1枚のシートにまとめる。
- 何度も各ステップを行ったり来たりする

## 第4章 実践編